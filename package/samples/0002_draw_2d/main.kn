; Draw 2D Sample (C)Kuina-chan

func main()
	var wndMain: wnd@Wnd :: wnd@makeWnd(null, %aspect, 1600, 900, "Draw 2D Sample") {ウインドウの生成}
	var drawMain: wnd@Draw :: wnd@makeDraw(wndMain, 0, 0, 1600, 900, %scale, %scale, false) {ドローコントロールの生成}
	var texKuin: draw@Tex :: draw@makeTex("res/kuin.png") {画像の読み込み}
	var fontProportional: draw@Font :: draw@makeFont(null, 32, false, false, true, 0.0) {プロポーショナルフォントの生成}
	var fontMonospace: draw@Font :: draw@makeFont(null, 32, false, false, false, 40.0) {等幅フォントの生成}
	do draw@clearColor(16#FF333333) {背景色の設定}
	while(wnd@act())
		do draw@line(100.0, 100.0, 200.0, 200.0, 16#FFFF3333) {線分}
		do draw@rectLine(300.0, 100.0, 100.0, 100.0, 16#FF33FF33) {四角形の枠線}
		do draw@rect(500.0, 100.0, 100.0, 100.0, 16#FF3333FF) {四角形}
		do draw@circle(750.0, 150.0, 50.0, 50.0, 16#FFFFFF33) {円}
		do draw@tri(950.0, 100.0, 900.0, 200.0, 1000.0, 200.0, 16#FFFF33FF) {三角形}
		for i(0, 3)
			do texKuin.draw(100.0 + i $ float * 200.0, 300.0, 0.0, 0.0, 150.0, 150.0, draw@white) {画像}
		end for
		do draw@rect(175.0, 375.0, 100.0, 100.0, 16#7FFF0000) {半透明}
		do draw@blend(%add)
		do draw@rect(375.0, 375.0, 100.0, 100.0, 16#FFFF0000) {加算}
		do draw@blend(%sub)
		do draw@rect(575.0, 375.0, 100.0, 100.0, 16#FFFF0000) {減算}
		do draw@blend(%mul)
		do draw@rect(775.0, 375.0, 100.0, 100.0, 16#FFFF0000) {乗算}
		do draw@blend(%alpha)
		do texKuin.drawScale(100.0, 500.0, 300.0, 300.0, 0.0, 0.0, 150.0, 150.0, draw@white) {拡大}
		do texKuin.drawRot(500.0, 575.0, 150.0, 150.0, 0.0, 0.0, 150.0, 150.0, 75.0, 75.0, -draw@cnt() $ float * lib@pi / 60.0, draw@white) {回転}
		do fontProportional.draw(1100.0, 100.0, "Proportional", draw@white) {プロポーショナルフォント}
		do fontMonospace.draw(1100.0, 200.0, "Monospace", draw@white) {等幅フォント}
		do draw@render(60)
	end while
end func

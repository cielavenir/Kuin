+func [d0917.knd, InitCompiler] initCompiler(memNum: int, lang: int)
end func

+func [d0917.knd, FinCompiler] finCompiler()
end func

+func [d0917.knd, BuildMem] build(path: []char, funcGetSrc: func<([]char): [][]char>, sysDir: []char, output: []char, icon: []char, rls_: bool, env: []char, funcLog: func<([][]char, int, int)>, lang: int, appCode: int): bool
end func

+func [d0917.knd, Interpret1] interpret1(src: [][]char, color: [][]bit8)
end func

+func [d0917.knd, Interpret2] interpret2(path: []char, funcGetSrc: func<([]char): [][]char>, sysDir: []char, env: []char, funcLog: func<([][]char, int, int)>, lang: int, blankMem: int, srcs: [][]char): bool
end func

+func [d0917.knd, Version] version(major: &int, minor: &int, micro: &int)
end func

+func [d0917.knd, ResetMemAllocator] resetMemAllocator(memIdx: int)
end func

+func [d0917.knd, ResetKeywords] resetKeywords()
end func

+func [d0917.knd, GetHint] getHint(bufIdx: int, src: []char, row: int, keyword: []char, hintSrc: &[]char, hintRow: &int, hintCol: &int): []char
end func

+func [d0917.knd, GetKeywords] getKeywords(src: []char, row: int, keyword: []char, callback: func<([]char)>): int
end func

+func [d0917.knd, RunDbg] runDbg(name: []char, cmdLine: []char, idleFunc: func<()>, eventFunc: func<(int, []char): int>): bool
end func

+func [d0917.knd, Archive] archive(dst: []char, src: []char, appCode: int): bool
end func

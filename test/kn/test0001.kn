func main()
	for i(1, 3)
		block
			do cui@print((-3 = 5).toStr() ~ ", " ~ (-3 <> 5).toStr() ~ ", " ~ (-3 < 5).toStr() ~ ", " ~ (-3 <= 5).toStr() ~ ", " ~ (-3 > 5).toStr() ~ ", " ~ (-3 >= 5).toStr())

			var a: int :: -3
			var b: int :: 5
			do cui@print((a = b).toStr() ~ ", " ~ (a <> b).toStr() ~ ", " ~ (a < b).toStr() ~ ", " ~ (a <= b).toStr() ~ ", " ~ (a > b).toStr() ~ ", " ~ (a >= b).toStr())

			do cui@print((4 = 4).toStr() ~ ", " ~ (4 <> 4).toStr() ~ ", " ~ (4 < 4).toStr() ~ ", " ~ (4 <= 4).toStr() ~ ", " ~ (4 > 4).toStr() ~ ", " ~ (4 >= 4).toStr())

			var c: int :: 4
			var d: int :: 4
			do cui@print((c = d).toStr() ~ ", " ~ (c <> d).toStr() ~ ", " ~ (c < d).toStr() ~ ", " ~ (c <= d).toStr() ~ ", " ~ (c > d).toStr() ~ ", " ~ (c >= d).toStr())
		end block

		block
			do cui@print((-3.0 = 5.0).toStr() ~ ", " ~ (-3.0 <> 5.0).toStr() ~ ", " ~ (-3.0 < 5.0).toStr() ~ ", " ~ (-3.0 <= 5.0).toStr() ~ ", " ~ (-3.0 > 5.0).toStr() ~ ", " ~ (-3.0 >= 5.0).toStr())

			var a: float :: -3.0
			var b: float :: 5.0
			do cui@print((a = b).toStr() ~ ", " ~ (a <> b).toStr() ~ ", " ~ (a < b).toStr() ~ ", " ~ (a <= b).toStr() ~ ", " ~ (a > b).toStr() ~ ", " ~ (a >= b).toStr())

			do cui@print((4.0 = 4.0).toStr() ~ ", " ~ (4.0 <> 4.0).toStr() ~ ", " ~ (4.0 < 4.0).toStr() ~ ", " ~ (4.0 <= 4.0).toStr() ~ ", " ~ (4.0 > 4.0).toStr() ~ ", " ~ (4.0 >= 4.0).toStr())

			var c: float :: 4.0
			var d: float :: 4.0
			do cui@print((c = d).toStr() ~ ", " ~ (c <> d).toStr() ~ ", " ~ (c < d).toStr() ~ ", " ~ (c <= d).toStr() ~ ", " ~ (c > d).toStr() ~ ", " ~ (c >= d).toStr())
		end block

		block
			do cui@print((0x79b8 = 0x81b8).toStr() ~ ", " ~ (0x79b8 <> 0x81b8).toStr() ~ ", " ~ (0x79b8 < 0x81b8).toStr() ~ ", " ~ (0x79b8 <= 0x81b8).toStr() ~ ", " ~ (0x79b8 > 0x81b8).toStr() ~ ", " ~ (0x79b8 >= 0x81b8).toStr())

			var a: bit8 :: 0x79b8
			var b: bit8 :: 0x81b8
			do cui@print((a = b).toStr() ~ ", " ~ (a <> b).toStr() ~ ", " ~ (a < b).toStr() ~ ", " ~ (a <= b).toStr() ~ ", " ~ (a > b).toStr() ~ ", " ~ (a >= b).toStr())

			do cui@print((0x80b8 = 0x80b8).toStr() ~ ", " ~ (0x80b8 <> 0x80b8).toStr() ~ ", " ~ (0x80b8 < 0x80b8).toStr() ~ ", " ~ (0x80b8 <= 0x80b8).toStr() ~ ", " ~ (0x80b8 > 0x80b8).toStr() ~ ", " ~ (0x80b8 >= 0x80b8).toStr())

			var c: bit8 :: 0x80b8
			var d: bit8 :: 0x80b8
			do cui@print((c = d).toStr() ~ ", " ~ (c <> d).toStr() ~ ", " ~ (c < d).toStr() ~ ", " ~ (c <= d).toStr() ~ ", " ~ (c > d).toStr() ~ ", " ~ (c >= d).toStr())
		end block

		block
			do cui@print((0x7900b16 = 0x8100b16).toStr() ~ ", " ~ (0x7900b16 <> 0x8100b16).toStr() ~ ", " ~ (0x7900b16 < 0x8100b16).toStr() ~ ", " ~ (0x7900b16 <= 0x8100b16).toStr() ~ ", " ~ (0x7900b16 > 0x8100b16).toStr() ~ ", " ~ (0x7900b16 >= 0x8100b16).toStr())

			var a: bit16 :: 0x7900b16
			var b: bit16 :: 0x8100b16
			do cui@print((a = b).toStr() ~ ", " ~ (a <> b).toStr() ~ ", " ~ (a < b).toStr() ~ ", " ~ (a <= b).toStr() ~ ", " ~ (a > b).toStr() ~ ", " ~ (a >= b).toStr())

			do cui@print((0x8000b16 = 0x8000b16).toStr() ~ ", " ~ (0x8000b16 <> 0x8000b16).toStr() ~ ", " ~ (0x8000b16 < 0x8000b16).toStr() ~ ", " ~ (0x8000b16 <= 0x8000b16).toStr() ~ ", " ~ (0x8000b16 > 0x8000b16).toStr() ~ ", " ~ (0x8000b16 >= 0x8000b16).toStr())

			var c: bit16 :: 0x8000b16
			var d: bit16 :: 0x8000b16
			do cui@print((c = d).toStr() ~ ", " ~ (c <> d).toStr() ~ ", " ~ (c < d).toStr() ~ ", " ~ (c <= d).toStr() ~ ", " ~ (c > d).toStr() ~ ", " ~ (c >= d).toStr())
		end block

		block
			do cui@print((0x79000000b32 = 0x81000000b32).toStr() ~ ", " ~ (0x79000000b32 <> 0x81000000b32).toStr() ~ ", " ~ (0x79000000b32 < 0x81000000b32).toStr() ~ ", " ~ (0x79000000b32 <= 0x81000000b32).toStr() ~ ", " ~ (0x79000000b32 > 0x81000000b32).toStr() ~ ", " ~ (0x79000000b32 >= 0x81000000b32).toStr())

			var a: bit32 :: 0x79000000b32
			var b: bit32 :: 0x81000000b32
			do cui@print((a = b).toStr() ~ ", " ~ (a <> b).toStr() ~ ", " ~ (a < b).toStr() ~ ", " ~ (a <= b).toStr() ~ ", " ~ (a > b).toStr() ~ ", " ~ (a >= b).toStr())

			do cui@print((0x80000000b32 = 0x80000000b32).toStr() ~ ", " ~ (0x80000000b32 <> 0x80000000b32).toStr() ~ ", " ~ (0x80000000b32 < 0x80000000b32).toStr() ~ ", " ~ (0x80000000b32 <= 0x80000000b32).toStr() ~ ", " ~ (0x80000000b32 > 0x80000000b32).toStr() ~ ", " ~ (0x80000000b32 >= 0x80000000b32).toStr())

			var c: bit32 :: 0x80000000b32
			var d: bit32 :: 0x80000000b32
			do cui@print((c = d).toStr() ~ ", " ~ (c <> d).toStr() ~ ", " ~ (c < d).toStr() ~ ", " ~ (c <= d).toStr() ~ ", " ~ (c > d).toStr() ~ ", " ~ (c >= d).toStr())
		end block

		block
			do cui@print((0x7900000000000000b64 = 0x8100000000000000b64).toStr() ~ ", " ~ (0x7900000000000000b64 <> 0x8100000000000000b64).toStr() ~ ", " ~ (0x7900000000000000b64 < 0x8100000000000000b64).toStr() ~ ", " ~ (0x7900000000000000b64 <= 0x8100000000000000b64).toStr() ~ ", " ~ (0x7900000000000000b64 > 0x8100000000000000b64).toStr() ~ ", " ~ (0x7900000000000000b64 >= 0x8100000000000000b64).toStr())

			var a: bit64 :: 0x7900000000000000b64
			var b: bit64 :: 0x8100000000000000b64
			do cui@print((a = b).toStr() ~ ", " ~ (a <> b).toStr() ~ ", " ~ (a < b).toStr() ~ ", " ~ (a <= b).toStr() ~ ", " ~ (a > b).toStr() ~ ", " ~ (a >= b).toStr())

			do cui@print((0x8000000000000000b64 = 0x8000000000000000b64).toStr() ~ ", " ~ (0x8000000000000000b64 <> 0x8000000000000000b64).toStr() ~ ", " ~ (0x8000000000000000b64 < 0x8000000000000000b64).toStr() ~ ", " ~ (0x8000000000000000b64 <= 0x8000000000000000b64).toStr() ~ ", " ~ (0x8000000000000000b64 > 0x8000000000000000b64).toStr() ~ ", " ~ (0x8000000000000000b64 >= 0x8000000000000000b64).toStr())

			var c: bit64 :: 0x8000000000000000b64
			var d: bit64 :: 0x8000000000000000b64
			do cui@print((c = d).toStr() ~ ", " ~ (c <> d).toStr() ~ ", " ~ (c < d).toStr() ~ ", " ~ (c <= d).toStr() ~ ", " ~ (c > d).toStr() ~ ", " ~ (c >= d).toStr())
		end block

		block
			do cui@print(("ab" = "a" ~ "c").toStr() ~ ", " ~ ("ab" <> "a" ~ "c").toStr() ~ ", " ~ ("ab" < "a" ~ "c").toStr() ~ ", " ~ ("ab" <= "a" ~ "c").toStr() ~ ", " ~ ("ab" > "a" ~ "c").toStr() ~ ", " ~ ("ab" >= "a" ~ "c").toStr())

			var a: []char :: "ab"
			var b: []char :: "a" ~ "c"
			do cui@print((a = b).toStr() ~ ", " ~ (a <> b).toStr() ~ ", " ~ (a < b).toStr() ~ ", " ~ (a <= b).toStr() ~ ", " ~ (a > b).toStr() ~ ", " ~ (a >= b).toStr())

			do cui@print(("ab" = "a" ~ "b").toStr() ~ ", " ~ ("ab" <> "a" ~ "b").toStr() ~ ", " ~ ("ab" < "a" ~ "b").toStr() ~ ", " ~ ("ab" <= "a" ~ "b").toStr() ~ ", " ~ ("ab" > "a" ~ "b").toStr() ~ ", " ~ ("ab" >= "a" ~ "b").toStr())
			do cui@print((a = "ab").toStr() ~ ", " ~ (a <> "ab").toStr() ~ ", " ~ (a < "ab").toStr() ~ ", " ~ (a <= "ab").toStr() ~ ", " ~ (a > "ab").toStr() ~ ", " ~ (a >= "ab").toStr())
		end block
	end for
end func
